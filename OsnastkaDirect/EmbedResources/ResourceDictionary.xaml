<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:r="clr-namespace:Microsoft.Windows.Controls.Ribbon;assembly=RibbonControlsLibrary"
                    xmlns:controls="clr-namespace:System.Windows.Controls;assembly=PresentationFramework"
                    xmlns:my="clr-namespace:OsnastkaDirect.Data">
    <controls:BooleanToVisibilityConverter x:Key="boolConv" />
    <!--Control colors.--><!--
    <Color x:Key="WindowColor">#FFE8EDF9</Color>
    <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
    <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

    <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
    <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
    <Color x:Key="DisabledForegroundColor">#FF888888</Color>

    <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
    <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

    <Color x:Key="ControlLightColor">White</Color>
    <Color x:Key="ControlMediumColor">#FF7381F9</Color>
    <Color x:Key="ControlDarkColor">#FF211AA9</Color>

    <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
    <Color x:Key="ControlPressedColor">#FF211AA9</Color>


    <Color x:Key="GlyphColor">#FF444444</Color>
    <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

    --><!--Border colors--><!--
    <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
    <Color x:Key="BorderMediumColor">#FF888888</Color>
    <Color x:Key="BorderDarkColor">#FF444444</Color>

    <Color x:Key="PressedBorderLightColor">#FF888888</Color>
    <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

    <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
    <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

    <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

    --><!--Control-specific resources.--><!--
    <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
    <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
    <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

    <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

    <LinearGradientBrush x:Key="MenuPopupBrush"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="{DynamicResource ControlLightColor}"
                      Offset="0" />
        <GradientStop Color="{DynamicResource ControlMediumColor}"
                      Offset="0.5" />
        <GradientStop Color="{DynamicResource ControlLightColor}"
                      Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                         StartPoint="0,0"
                         EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#000000FF"
                              Offset="0" />
                <GradientStop Color="#600000FF"
                              Offset="0.4" />
                <GradientStop Color="#600000FF"
                              Offset="0.6" />
                <GradientStop Color="#000000FF"
                              Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <Style x:Key="{x:Type TreeView}"
           TargetType="TreeView">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeView">
                    <Border Name="Border"
                            CornerRadius="1"
                            BorderThickness="1">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                        </Border.BorderBrush>
                        <Border.Background>
                            <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                        </Border.Background>
                        <ScrollViewer Focusable="False"
                                      CanContentScroll="False"
                                      Padding="4">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpandCollapseToggleStyle"
           TargetType="ToggleButton">
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Width="15"
                          Height="13"
                          Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="Collapsed">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="Expanded">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="Collapsed"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center"
                              Margin="1,1,1,1"
                              Data="M 4 0 L 8 4 L 4 8 Z">
                            <Path.Fill>
                                <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                            </Path.Fill>
                        </Path>
                        <Path x:Name="Expanded"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center"
                              Margin="1,1,1,1"
                              Data="M 0 4 L 8 4 L 4 8 Z"
                              Visibility="Hidden">
                            <Path.Fill>
                                <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                            </Path.Fill>
                        </Path>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0,0,0,0"
                                   StrokeThickness="5"
                                   Stroke="Black"
                                   StrokeDashArray="1 2"
                                   Opacity="0" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type TreeViewItem}"
           TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,
    RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,
    RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding"
                Value="1,0,0,0" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource TreeViewItemFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19"
                                              Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                      Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource SelectedBackgroundColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="SelectedInactive">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                      Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource SelectedUnfocusedColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="ItemsHost">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Collapsed" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ToggleButton x:Name="Expander"
                                      Style="{StaticResource ExpandCollapseToggleStyle}"
                                      ClickMode="Press"
                                      IsChecked="{Binding IsExpanded, 
            RelativeSource={RelativeSource TemplatedParent}}" />
                        <Border x:Name="Bd"
                                Grid.Column="1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="PART_Header"
                                              ContentSource="Header"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost"
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Grid.ColumnSpan="2"
                                        Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems"
                                 Value="false">
                            <Setter TargetName="Expander"
                                    Property="Visibility"
                                    Value="Hidden" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader"
                                           Value="false" />
                                <Condition Property="Width"
                                           Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                                    Property="MinWidth"
                                    Value="75" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader"
                                           Value="false" />
                                <Condition Property="Height"
                                           Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                                    Property="MinHeight"
                                    Value="19" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    <Style TargetType="{x:Type TreeView}">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                             Color="#CBE8F6" />
            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                             Color="#F6F6F6" />
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                             Color="Black" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}"
                             Color="Black" />
        </Style.Resources>
    </Style>
    <Style TargetType="{x:Type TreeViewItem}">
        <Setter Property="BorderThickness"
                Value="1" />
        <Style.Triggers>
            <Trigger Property="IsSelected"
                     Value="True">
                <Setter Property="BorderBrush"
                        Value="#26A0DA" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="my:TreeViewItemHelper.IsMouseDirectlyOverItem"
                               Value="True" />
                    <Condition Property="IsSelected"
                               Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background"
                        Value="#E5F3FB" />
                <Setter Property="BorderBrush"
                        Value="#70C0E7" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected"
                               Value="True" />
                    <Condition Property="IsSelectionActive"
                               Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush"
                        Value="#DADADA" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type DataGrid}"
           BasedOn="{StaticResource ResourceKey=NewDataGrid}"
           x:Key="{x:Type DataGrid}">
    </Style>
    <Style TargetType="r:RibbonButton">
        <!--HasDropShadow="False"
    Placement="Relative" HorizontalOffset="15" VerticalOffset="10"-->
        <Setter Property="ToolTipService.InitialShowDelay"
                Value="10" />
        <Setter Property="ToolTipService.Placement"
                Value="Top" />
        <Setter Property="ToolTipService.VerticalOffset"
                Value="115" />
    </Style>
    <SolidColorBrush x:Key="DataGridHeaderColor"
                     Color="#C5D0E6" />
    <Style TargetType="DataGridRow"
           x:Key="DataGridRowBase">

        <Style.Triggers>
            <Trigger Property="DataGridRow.IsSelected"
                     Value="true">
                <Setter Property="BorderBrush"
                        Value="#FF2B579A" />
                <Setter Property="BorderThickness"
                        Value="0 1 0 1" />
                <Setter Property="Height"
                        Value="20" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Height"
                Value="20" />
        <Setter Property="MinWidth"
                Value="0" />
        <Setter Property="Padding"
                Value="0" />
    </Style>
    <Style TargetType="{x:Type DataGridColumnHeader}"
           BasedOn="{StaticResource ResourceKey=NewDataGridColumn}">
    </Style>
    <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource ResourceKey=NewDataGridCell}">
        <Style.Triggers>
            <Trigger Property="DataGridCell.IsSelected"
                     Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="Transparent" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground"
                        Value="{DynamicResource
       {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="FontSize"
                        Value="14" />
                <Setter Property="FontWeight"
                        Value="Bold" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="ToolTip"
                Value="{Binding RelativeSource={RelativeSource Self},    Path=Content.Text}" />
    </Style>

    <Style TargetType="{x:Type CheckBox}"
           BasedOn="{StaticResource ResourceKey=NewCheckBox}"
           x:Key="{x:Type CheckBox}" />
    <Style TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource ResourceKey=NewComboBox}"
           x:Key="{x:Type ComboBox}">
        <!--<Setter Property="ComboBox.Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black"
                                  ShadowDepth="1"
                                  Opacity="0.4" />
            </Setter.Value>
        </Setter>-->
        <!--<Setter Property="Effect">
            <DropShadowEffect Color="Black"
                              ShadowDepth="1"
                              Opacity="0.4" />
        </Setter>-->
    </Style>
    <Style TargetType="{x:Type ComboBoxItem}"
           BasedOn="{StaticResource ResourceKey=NewComboBoxItem}"
           x:Key="{x:Type ComboBoxItem}" />
    <Style TargetType="{x:Type RadioButton}"
           BasedOn="{StaticResource ResourceKey=NewRadioButton}"
           x:Key="{x:Type RadioButton}" />
    <Style TargetType="{x:Type Button}"
           BasedOn="{StaticResource ResourceKey=WhiteButton}"
           x:Key="{x:Type Button}" />
    <Style TargetType="{x:Type ProgressBar}"
           BasedOn="{StaticResource ResourceKey=NewProgressBar}"
           x:Key="{x:Type ProgressBar}" />
    <Style TargetType="{x:Type Image}"
           BasedOn="{StaticResource ResourceKey=NewImage}"
           x:Key="{x:Type Image}" />
    <Style TargetType="{x:Type TextBox}"
           BasedOn="{StaticResource ResourceKey=NewTextBox}"
           x:Key="{x:Type TextBox}" />
    <Style TargetType="{x:Type DatePickerTextBox}"
           BasedOn="{StaticResource ResourceKey=NewDatePickerTextBox}"
           x:Key="{x:Type DatePickerTextBox}" />
    <Style TargetType="{x:Type DatePicker}"
           BasedOn="{StaticResource ResourceKey=NewDatePicker}"
           x:Key="{x:Type DatePicker}" />
    <Style TargetType="{x:Type ScrollBar}"
           BasedOn="{StaticResource ResourceKey=NewScrollBar}"
           x:Key="{x:Type ScrollBar}" />
    <LinearGradientBrush x:Key="RainbowStyle"
                         EndPoint="0,1">
        <GradientStop Color="Red"
                      Offset="0" />
        <GradientStop Color="Orange"
                      Offset="0.16" />
        <GradientStop Color="Yellow"
                      Offset="0.32" />
        <GradientStop Color="Green"
                      Offset="0.48" />
        <GradientStop Color="SkyBlue"
                      Offset="0.64" />
        <GradientStop Color="Blue"
                      Offset="0.80" />
        <GradientStop Color="Purple"
                      Offset="1" />
    </LinearGradientBrush>
</ResourceDictionary>